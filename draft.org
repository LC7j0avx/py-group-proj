#+title: Global Cybersecurity Threats Analysis
#+OPTIONS: H:3 date:nil author:nil
#+EXPORT_FILE_NAME: Analysis

* Config :noexport:
#+begin_src emacs-lisp :exports none :results none :eval always
(setq org-latex-listings 'minted
      org-latex-packages-alist '(("" "minted"))
      org-latex-minted-options '(("frame" "lines") ("fontsize" "\\footnotesize") ("breakautoindent" "true") ("breaklines" "true"))
      org-latex-pdf-process
      '("latexmk -xelatex -quiet -shell-escape -f %f"))
#+end_src

#+latex_class: article
#+latex_class_options: [a4paper,12pt]

#+LATEX_HEADER: \usepackage[default,scale=0.95]{opensans}
#+LATEX_HEADER: \usepackage[table]{xcolor}
#+LATEX_HEADER: \usepackage[margin=0.8in,bmargin=1.0in,tmargin=1.0in]{geometry}
#+LATEX_HEADER: \usepackage{enumitem, csquotes, caption, array, booktabs, ltablex, adjustbox}
#+LATEX_HEADER: \usepackage{pifont, mathabx}
#+LATEX_HEADER: \usepackage{mathpazo}
#+LATEX_HEADER: \usepackage[dvipsnames]{xcolor}
#+LATEX_HEADER: \usepackage[inkscapearea=page]{svg}
#+LATEX_HEADER: \makeatletter
#+LATEX_HEADER: \newcommand*{\compress}{\@minipagetrue}
#+LATEX_HEADER: \makeatother
#+LATEX_HEADER: \newlist{tabenum}{enumerate}{1}
#+LATEX_HEADER: \setlist[tabenum]{label=\arabic*. ,leftmargin=*, itemsep=2pt, after=\vspace{-\baselineskip}, before=\vspace{-0.5\baselineskip}}
#+LATEX_HEADER: \newlist{tabitem}{itemize}{1}
#+LATEX_HEADER: \setlist[tabitem]{label=$\bullet$, leftmargin=*, itemsep=2pt, after=\vspace{-\baselineskip}, before=\vspace{-0.5\baselineskip}}
#+LATEX_HEADER: \keepXColumns
#+LaTeX_HEADER: \usepackage{multicol}
#+LaTeX_HEADER: \usepackage[none]{hyphenat}
#+LATEX_HEADER: \usepackage[linkcolor=MidnightBlue,urlcolor=Orange]{hyperref}
#+LATEX_HEADER: \hypersetup{colorlinks=true}
#+LATEX_HEADER: \AtBeginDocument{%
#+LATEX_HEADER: \hypersetup{
#+LATEX_HEADER:  allbordercolors={1 1 1},
#+LATEX_HEADER:  urlbordercolor=Orange,
#+LATEX_HEADER:  pdfborderstyle={/S/U/W 1}
#+LATEX_HEADER: }}
#+LATEX_HEADER: \usepackage{fontawesome5}
#+LaTeX_HEADER: \renewcommand\labelitemii{\sqbullet}
#+LaTeX_HEADER: \renewcommand\labelitemi{\bullet}

* COMMENT Setup
#+BEGIN_SRC emacs-lisp :session t
(pipenv-deactivate)
(pipenv-activate)
#+END_SRC

* Setup
** Import Packages
#+begin_src python :session t :eval no-export
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.ticker import FuncFormatter
import seaborn as sns
#+end_src

#+RESULTS:
: None
** Load data
#+begin_src python :session t :eval no-export :exports both :results table :wrap src text
pd.set_option('display.max_columns', 50, 'display.width', 200)
df = pd.read_csv('data/Global_Cybersecurity_Threats_2015-2024.csv')
df.head()
#+end_src

#+RESULTS:
#+begin_src text
|   | Country | Year | Attack Type       | Target Industry    | Financial Loss (in Million $) | Number of Affected Users | Attack Source | Security Vulnerability Type | Defense Mechanism Used | Incident Resolution Time (in Hours) |
|---+---------+------+-------------------+--------------------+-------------------------------+--------------------------+---------------+-----------------------------+------------------------+-------------------------------------|
| 0 | China   | 2019 | Phishing          | Education          |                         80.53 |                   773169 | Hacker Group  | Unpatched Software          | VPN                    |                                  63 |
| 1 | China   | 2019 | Ransomware        | Retail             |                         62.19 |                   295961 | Hacker Group  | Unpatched Software          | Firewall               |                                  71 |
| 2 | India   | 2017 | Man-in-the-Middle | IT                 |                         38.65 |                   605895 | Hacker Group  | Weak Passwords              | VPN                    |                                  20 |
| 3 | UK      | 2024 | Ransomware        | Telecommunications |                         41.44 |                   659320 | Nation-state  | Social Engineering          | AI-based Detection     |                                   7 |
| 4 | Germany | 2018 | Man-in-the-Middle | IT                 |                         74.41 |                   810682 | Insider       | Social Engineering          | VPN                    |                                  68 |
#+end_src

* Trend Analysis
** Financial Losses
*** Overall

#+begin_src python :session t :eval no-export :var f="output/fig/Trends-Financial-Losses-Overall.png" :results file :exports both
trend_df = df.groupby('Year')['Financial Loss (in Million $)'].sum()

plt.figure(figsize=(12, 6))
sns.barplot(x=trend_df.index,y=trend_df, palette="GnBu")

plt.title('Trend of Total Financial Losses Over Time (2015-2024)')
plt.xlabel('Year')
plt.ylabel('Total Financial Loss (in Million $)')
plt.grid(axis='y')

plt.tight_layout()
#plt.show()

#+end_src

#+RESULTS:
[[file:output/fig/Trends-Financial-Losses-Overall.png]]

*** Breakdown by Attack types

#+begin_src python :session t :eval no-export :var f="output/fig/Trends-financial-losses-by-attach-types.png" :results file :exports both
# Group by Year and Attack Type, summing financial losses
trend_df = df.groupby(['Year', 'Attack Type'])['Financial Loss (in Million $)'].sum().unstack(fill_value=0)

# Plotting the data as a bar chart
trend_df.plot(kind='bar', figsize=(12, 8), width=0.8)

plt.title('Trend of Financial Losses Breakdown by Attack types Over Time (2015-2024)')
plt.xlabel('Year')
plt.ylabel('Total Financial Loss (in Million $)')
plt.xticks(rotation=0)  # Keep x-axis labels horizontal
plt.legend(title='Attack Type')
plt.grid(axis='y')
plt.tight_layout()
plt.show()
#+end_src

#+RESULTS:
[[file:output/fig/Trends-financial-losses-by-attach-types.png]]

*** Breakdown by Target Industries

#+begin_src python :session t :eval no-export :var f="output/fig/Trends-financial-losses-by-target-industries.png" :results file :exports both
# Group by Year and Target Industry, summing financial losses
trend_df = df.groupby(['Year', 'Target Industry'])['Financial Loss (in Million $)'].sum().unstack(fill_value=0)

# Plotting the data as a bar chart
trend_df.plot(kind='bar', figsize=(12, 8), width=0.8)

plt.title('Trend of Financial Losses Breakdown by Target Industries Over Time (2015-2024)')
plt.xlabel('Year')
plt.ylabel('Total Financial Loss (in Million $)')
plt.xticks(rotation=0)  # Keep x-axis labels horizontal
plt.legend(title='Target Industry')
plt.grid(axis='y')
plt.tight_layout()
plt.show()
#+end_src

#+RESULTS:
[[file:output/fig/Trends-financial-losses-by-target-industries.png]]

*** Breakdown by Vulnerabilities

#+begin_src python :session t :eval no-export :var f="output/fig/trends-financial-losses-by-vulnerability-types.png" :results file :exports both
# Group by Year and Security Vulnerability Type, summing financial losses
vulnerability_df = df.groupby(['Year', 'Security Vulnerability Type'])['Financial Loss (in Million $)'].sum().unstack(fill_value=0)

# Plotting the data as a bar chart
vulnerability_df.plot(kind='bar', figsize=(12, 8), width=0.8)

plt.title('Financial Losses Due to Vulnerabilities Over Time (2015-2024)')
plt.xlabel('Year')
plt.ylabel('Total Financial Loss (in Million $)')
plt.xticks(rotation=0)  # Keep x-axis labels horizontal
plt.legend(title='Vulnerability Type')
plt.grid(axis='y')
plt.tight_layout()
plt.show()
#+end_src

#+RESULTS:
[[file:output/fig/trends-financial-losses-by-vulnerability-types.png]]
** Number of Affected Users
*** Overall

#+begin_src python :session t :eval no-export :var f="output/fig/Trends-affected-users-overall.png" :results file :exports both
trend_df = df.groupby('Year')['Number of Affected Users'].sum()

plt.figure(figsize=(12, 6))
sns.barplot(x=trend_df.index,y=trend_df, palette="GnBu")

plt.title('Trend of Total Number of Affected Users Over Time (2015-2024)')
plt.xlabel('Year')
plt.ylabel('Total Number of Affected Users')
plt.grid(axis='y')

# Apply number formatting
plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{int(x):,}'))

plt.tight_layout()
plt.show()
#+end_src

#+RESULTS:
[[file:output/fig/Trends-affected-users-overall.png]]

*** Breakdown by Attack types

#+begin_src python :session t :eval no-export :var f="output/fig/Trends-affected-users-by-attach-types.png" :results file :exports both
trend_df = df.groupby(['Year', 'Attack Type'])['Number of Affected Users'].sum().unstack(fill_value=0)

# Plotting the data as a bar chart
trend_df.plot(kind='bar', stacked=True, figsize=(12, 8), width=0.8)

plt.title('Trend of Number of Affected Users Breakdown by Attack types Over Time (2015-2024)')
plt.xlabel('Year')
plt.ylabel('Total Number of Affected Users')
plt.xticks(rotation=0)  # Keep x-axis labels horizontal
plt.legend(title='Attack Type')
plt.grid(axis='y')
plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{int(x):,}')) # Apply number formatting
plt.tight_layout()
plt.show()
#+end_src

#+RESULTS:
[[file:output/fig/Trends-affected-users-by-attach-types.png]]

*** Breakdown by Target Industries

#+begin_src python :session t :eval no-export :var f="output/fig/Trends-affected-users-by-target-industries.png" :results file :exports both

trend_df = df.groupby(['Year', 'Target Industry'])['Number of Affected Users'].sum().unstack(fill_value=0)

# Plotting the data as a bar chart
trend_df.plot(kind='bar', stacked=True, figsize=(12, 8), width=0.8)

plt.title('Trend of Number of Affected Users Breakdown by Target Industries Over Time (2015-2024)')
plt.xlabel('Year')
plt.ylabel('Total Number of Affected Users')
plt.xticks(rotation=0)  # Keep x-axis labels horizontal
plt.legend(title='Target Industry')
plt.grid(axis='y')
plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{int(x):,}')) # Apply number formatting
plt.tight_layout()
plt.show()
#+end_src

#+RESULTS:
[[file:output/fig/Trends-affected-users-by-target-industries.png]]

*** Breakdown by Vulnerabilities

#+begin_src python :session t :eval no-export :var f="output/fig/trends-affected-users-by-vulnerability-types.png" :results file :exports both
trend_df = df.groupby(['Year', 'Security Vulnerability Type'])['Number of Affected Users'].sum().unstack(fill_value=0)

# Plotting the data as a bar chart
trend_df.plot(kind='bar', stacked=True, figsize=(12, 8), width=0.8)

plt.title('Trend of Number of Affected Users Breakdown by Vulnerabilities Over Time (2015-2024)')
plt.xlabel('Year')
plt.ylabel('Total Number of Affected Users')
plt.xticks(rotation=0)  # Keep x-axis labels horizontal
plt.legend(title='Security Vulnerability Type')
plt.grid(axis='y')
plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{int(x):,}')) # Apply number formatting
plt.tight_layout()
plt.show()
#+end_src

#+RESULTS:
[[file:output/fig/trends-affected-users-by-vulnerability-types.png]]

* Geographical Analysis
- Compare the frequency and impact of cyberattacks across different countries.
- Identify which countries are most affected by specific attack types.
** Financial Losses
*** Overall
#+begin_src python :session t :eval no-export :var f="output/fig/Geographical-financial-losses-overall.png" :results file :exports both
grouped_df = df.groupby('Country')['Financial Loss (in Million $)'].sum()

# Plotting the pie chart
plt.figure(figsize=(10, 8))
wedges, texts, autotexts = plt.pie(grouped_df, autopct=lambda pct:f"${round(grouped_df.sum()*pct/100):,}M\n({pct:.1f}%)", textprops=dict(color="w"), wedgeprops=dict(width=0.7, edgecolor='w'))
plt.legend(wedges, grouped_df.index, title="Countries", loc="center left", bbox_to_anchor=(1, 0, 0.5, 1))
plt.title('Financial Losses by Country (2015-2024)')
plt.tight_layout()
plt.show()
#+end_src

#+RESULTS:
[[file:output/fig/Geographical-financial-losses-overall.png]]

** Number of Affected Users
*** Overall
#+begin_src python :session t :eval no-export :var f="output/fig/Geographical-affected-users-overall.png" :results file :exports both
country_df = df.groupby('Country')['Number of Affected Users'].sum()

# Plotting the pie chart
plt.figure(figsize=(10, 8))
wedges, texts, autotexts = plt.pie(country_df, autopct=lambda pct:f"{round(country_df.sum()*pct/100):,}\n({pct:.1f}%)", textprops=dict(color="w"), wedgeprops=dict(width=0.7, edgecolor='w'))
plt.legend(wedges, country_df.index, title="Countries", loc="center left", bbox_to_anchor=(1, 0, 0.5, 1))
plt.title('Number of Affected Users by Country (2015-2024)')
plt.tight_layout()
plt.show()
#+end_src

#+RESULTS:
[[file:output/fig/Geographical-affected-users-overall.png]]
* Financial Impact Analysis
- Assess the total financial losses caused by cyberattacks per year or country.
- Analyze the correlation between attack types and financial losses.

* Industry Analysis
- Determine which industries are most frequently targeted by cyberattacks.
- Assess the impact of attacks on different sectors, such as healthcare, finance, and education.

* Vulnerability Analysis
- Identify common security vulnerabilities exploited in attacks.
- Analyze the effectiveness of various defense mechanisms used against attacks.

* User Impact Analysis
- Assess how many users are affected by different attack types or in different countries.
- Explore the relationship between the number of affected users and financial losses.

* Response Time Analysis
- Analyze the incident resolution times based on attack types or countries.
- Identify any patterns in response effectiveness.

* Defensive Mechanism Effectiveness
- Evaluate the success rates of different defense mechanisms against various attack types.
